pipeline {
    agent any

    tools {
        maven 'Maven3' // Utiliser le nom d√©fini dans Jenkins (Global Tool Configuration)
    }

    environment {
        SONAR_TOKEN = credentials('sonar-token') // Chargement du token depuis Jenkins Credentials
    }

    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/wafaabbes/micro-auth.git'
            }
        }

        stage('Unit Test') {
            steps {
                sh 'mvn test'
            }
        }

        stage('Integration Test') {
            steps {
                sh 'mvn verify -DskipTests'
            }
        }

        stage('Build') {
            steps {
                sh 'mvn clean install'
            }
        }

        stage('Static Code Analysis') {
            steps {
                // Utilisation de l'installation SonarQubeLocal dans le pipeline
                withSonarQubeEnv(installationName: 'SonarQubeLocal') {
                    sh 'mvn sonar:sonar -Dsonar.login=${SONAR_TOKEN}' // Envoi du token dans la commande SonarQube
                }
            }
        }

        stage('Quality Gate') {
            steps {
                waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token'
            }
        }
    }
}
