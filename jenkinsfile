pipeline {
    agent any

    tools {
        // Utilisez un nom de tool configuré dans Jenkins
        nodejs 'NodeJS_18_LTS' 
    }

    environment {
        // Force la version npm si nécessaire
        npm_config_engine_strict = 'false'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: 'main']],
                    userRemoteConfigs: [[
                        url: 'https://github.com/wafaabbes/micro-auth.git',
                        credentialsId: 'github',
                        // Configuration Git avancée
                        extensions: [
                            [
                                $class: 'CloneOption',
                                depth: 1,
                                noTags: false,
                                reference: '',
                                shallow: true
                            ],
                            [
                                $class: 'LocalBranch',
                                localBranch: 'main'
                            ]
                        ]
                    ]]
                ])
            }
        }

        stage('Setup Node') {
            steps {
                sh """
                # Vérification des versions
                node --version
                npm --version
                
                # Contournement temporaire pour EBADENGINE
                npm config set engine-strict false
                """
            }
        }

        stage('Install & Test') {
            steps {
                sh """
                # Installation propre
                npm ci --prefer-offline --no-audit
                
                # Exécution des tests
                npm run test:unit
                npm run test:integration
                """
            }
        }
    }

    post {
        always {
            junit '**/test-results/**/*.xml' // Archive les résultats des tests
            cleanWs() // Nettoyage de l'espace de travail
        }
    }
}
