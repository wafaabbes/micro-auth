pipeline {
    agent any

    environment {
        // Configuration npm optimale
        npm_config_cache = "${WORKSPACE}/.npm"
        npm_config_omit = "optional"  // Nouvelle syntaxe pour exclure les dépendances optionnelles
        npm_config_prefer_offline = "true"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/main']],
                    extensions: [],
                    userRemoteConfigs: [[url: 'https://github.com/wafaabbes/micro-auth.git']]
                ])
            }
        }

        stage('Install') {
            steps {
                script {
                    // Nettoyage et installation propre
                    sh '''
                        npm cache clean --force
                        npm ci --omit=optional --prefer-offline
                    '''
                }
            }
        }

        stage('Build') {
            steps {
                sh 'npm run build'  // Adaptez à votre script de build
            }
        }

        stage('Test') {
            steps {
                sh 'npm test'  // Exécution des tests
            }
        }

        stage('Deploy') {
            when {
                branch 'main'  // Exemple: ne déployer que depuis la branche main
            }
            steps {
                // Ajoutez ici vos étapes de déploiement
            }
        }
    }

    post {
        always {
            cleanWs()  // Nettoyage de l'espace de travail
            script {
                // Archivage des résultats de build
                archiveArtifacts artifacts: 'dist/**/*', allowEmptyArchive: true
                // Archivage des rapports de test si existants
                junit '**/test-results.xml' 
            }
        }
        success {
            // Notification en cas de succès
            echo 'Build réussi!'
        }
        failure {
            // Notification en cas d'échec
            echo 'Build échoué!'
        }
    }
}
