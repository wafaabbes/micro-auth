pipeline {
    agent any

    tools {
        maven 'Maven 3.8.5' // √† configurer dans Jenkins > Global Tool Configuration
    }

    environment {
        SONARQUBE_CREDENTIALS = credentials('sonar-api') // ID d√©fini dans Jenkins
    }

    stages {
        stage('Git Checkout') {
            steps {
                script {
                    git branch: 'main', url: 'https://github.com/wafaabbes/mrdevops_javaapplication.git'
                }
            }
        }

        stage('Unit Testing') {
            steps {
                script {
                    sh 'mvn test'
                }
            }
        }

        stage('Integration Testing') {
            steps {
                script {
                    // Assurez-vous que les tests d'int√©gration sont bien s√©par√©s via failsafe plugin
                    sh 'mvn verify -DskipUnitTests=true'
                }
            }
        }

        stage('Maven Build') {
            steps {
                script {
                    sh 'mvn clean install'
                }
            }
        }

        stage('Static Code Analysis (SonarQube)') {
            steps {
                script {
                    withSonarQubeEnv(credentialsId: 'sonar-api') {
                        sh 'mvn clean verify sonar:sonar'
                    }
                }
            }
        }

        stage('Quality Gate Status') {
            steps {
                script {
                    waitForQualityGate abortPipeline: true
                }
            }
        }

        stage('Archive Artifacts') {
            steps {
                archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true
            }
        }
    }

    post {
        always {
            echo 'Pipeline termin√©e.'
        }
        success {
            echo 'D√©ploiement r√©ussi.'
        }
        failure {
            echo '√âchec de la pipeline.'
            mail to: 'devops@example.com',
                 subject: "üö® Pipeline Jenkins √©chou√©e : ${env.JOB_NAME} [${env.BUILD_NUMBER}]",
                 body: "Voir les logs ici : ${env.BUILD_URL}"
        }
    }
}
