pipeline {
    agent any

    environment {
        NODE_ENV = 'test'
        // Ajoutez ici d'autres variables si nécessaire
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/main']],
                    extensions: [],
                    userRemoteConfigs: [[
                        url: 'https://github.com/wafaabbes/micro-auth.git',
                        credentialsId: 'github-credentials' // Ajoutez des credentials si nécessaire
                    ]]
                ])
            }
        }

        stage('Vérification Environnement') {
            steps {
                script {
                    echo '===== Versions ====='
                    def nodeVersion = sh(returnStdout: true, script: 'node -v').trim()
                    def npmVersion = sh(returnStdout: true, script: 'npm -v').trim()
                    echo "Node.js: ${nodeVersion}"
                    echo "NPM: ${npmVersion}"
                    
                    // Vérification des outils de build
                    sh 'gcc --version || echo "GCC non installé"'
                    sh 'make --version || echo "Make non installé"'
                    sh 'python3 --version || echo "Python non installé"'
                }
            }
        }

        stage('Installation Dépendances') {
            steps {
                script {
                    echo '===== Nettoyage et Installation ====='
                    sh 'npm cache clean --force'
                    sh 'rm -rf node_modules package-lock.json'
                    
                    // Installation avec journalisation détaillée
                    sh 'npm install --loglevel verbose' 
                    
                    // Vérification des dépendances critiques
                    sh 'npm ls bcrypt jsonwebtoken || true'
                    
                    // Audit de sécurité
                    sh 'npm audit --production || true'
                }
            }
        }

        stage('Tests Unitaires') {
            steps {
                script {
                    echo '===== Exécution des Tests ====='
                    sh 'npm test'
                }
            }
        }
    }

    post {
        always {
            echo '===== Nettoyage Final ====='
            archiveArtifacts artifacts: '**/test-results.xml', allowEmptyArchive: true
            junit '**/test-results.xml'
        }
        failure {
            echo '===== ÉCHEC DU PIPELINE ====='
            // Ajoutez ici des notifications (email, Slack, etc.)
        }
    }
}
