pipeline {
    agent any

    environment {
        NODE_ENV = 'test'
        // Ajouter la version de Node si utilisée avec nvm/ndenv
        // NODE_VERSION = '16.14.0' 
    }

    options {
        timeout(time: 15, unit: 'MINUTES')  // Timeout global
        disableConcurrentBuilds()           // Évite les exécutions concurrentes
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: 'main']],
                    extensions: [],
                    userRemoteConfigs: [[url: 'https://github.com/wafaabbes/micro-auth.git']]
                ])
            }
        }

        stage('Setup Node') {
            steps {
                dir('backend') {
                    // Optionnel : Installation d'une version spécifique de Node
                    // nvm use $NODE_VERSION || nvm install $NODE_VERSION
                    sh 'node --version'
                    sh 'npm --version'
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                dir('backend') {
                    sh 'npm ci'  // Plus fiable que npm install pour CI
                }
            }
        }

        stage('Run Tests') {
            steps {
                dir('backend') {
                    sh 'npx mocha --timeout 5000 --colors tests/unit/**/*.test.js'
                }
            }
            post {
                always {
                    junit 'backend/test-results.xml' // Si Mocha génère un rapport JUnit
                }
            }
        }
    }

    post {
        success {
            echo '✅ Pipeline terminé avec succès.'
            // Optionnel : Notification (Slack, email...)
        }
        failure {
            echo '❌ Échec du pipeline. Vérifie les logs.'
        }
        always {
            // Nettoyage si nécessaire
        }
    }
}
