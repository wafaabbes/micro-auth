pipeline {
    agent any

    environment {
        NODE_ENV = 'test'
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: 'main']],
                    extensions: [],
                    userRemoteConfigs: [[url: 'https://github.com/wafaabbes/micro-auth.git']]
                ])
            }
        }

        stage('Install Dependencies') {
            steps {
                dir('backend') {
                    // Utilisez npm ci pour une installation plus fiable en CI
                    sh 'npm ci --no-audit'  // Ignore les avertissements de sécurité temporairement
                    // OU pour mettre à jour les dépendances dépréciées :
                    // sh 'npm update'
                }
            }
        }

        stage('Run Tests') {
            steps {
                dir('backend') {
                    sh 'npx mocha --timeout 5000 --exit tests/unit/**/*.test.js'
                }
            }
            post {
                always {
                    junit 'backend/test-results.xml' // Si vous générez un rapport JUnit
                    archiveArtifacts artifacts: 'backend/test-results.xml', allowEmptyArchive: true
                }
            }
        }
    }

    post {
        success {
            echo '✅ Pipeline terminé avec succès'
            // slackSend channel: '#devops', message: 'Pipeline réussi'
        }
        failure {
            echo '❌ Échec du pipeline'
            // slackSend channel: '#devops', message: 'Pipeline échoué'
        }
        always {
            cleanWs() // Nettoyage de l'espace de travail
        }
    }
}
