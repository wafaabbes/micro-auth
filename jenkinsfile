pipeline {
    agent any

    environment {
        NODE_ENV = 'test'
    }

    options {
        skipDefaultCheckout(true)
        timeout(time: 30, unit: 'MINUTES')
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: 'main']],
                    extensions: [],
                    userRemoteConfigs: [[url: 'https://github.com/wafaabbes/micro-auth.git']]
                ])
            }
        }

        stage('Install Dependencies') {
            steps {
                dir('backend') {
                    sh 'npm ci --no-audit'
                    sh 'npm install jest jest-junit --save-dev'
                }
            }
        }

        stage('Run Tests') {
            steps {
                dir('backend') {
                    sh '''
                    # Lancer les tests avec un nombre r√©duit de workers pour √©viter les erreurs li√©es aux processus enfants
                    npx jest --ci --reporters=default --reporters=jest-junit --maxWorkers=2
                    '''
                }
            }
            post {
                always {
                    junit 'backend/junit.xml'
                }
            }
        }

        stage('Build and Scan Docker Image') {
            steps {
                script {
                    def imageName = 'wafaabbes/micro-auth'
                    def imageTag = "v${env.BUILD_NUMBER}"
                    def fullImage = "${imageName}:${imageTag}"

                    dir('backend') {
                        // Build Docker image
                        sh "docker build -t ${fullImage} ."

                        // Scan de s√©curit√© avec Trivy
                        sh '''
                            # Installer Trivy si non disponible
                            if ! command -v trivy &> /dev/null; then
                                echo "üîß Installation de Trivy..."
                                sudo apt-get update && sudo apt-get install -y wget
                                wget https://github.com/aquasecurity/trivy/releases/latest/download/trivy_0.50.1_Linux-64bit.deb
                                sudo dpkg -i trivy_0.50.1_Linux-64bit.deb
                            fi

                            echo "üîç Scan de s√©curit√© avec Trivy..."
                            trivy image --exit-code 1 --severity CRITICAL,HIGH ${fullImage}
                        '''
                    }
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    def imageName = 'wafaabbes/micro-auth'
                    def imageTag = "v${env.BUILD_NUMBER}"
                    def fullImage = "${imageName}:${imageTag}"

                    withCredentials([usernamePassword(credentialsId: 'docker-hub-creds', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                        sh "echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin"
                    }

                    sh "docker push ${fullImage}"
                }
            }
        }
    }

    post {
        success {
            echo '‚úÖ Pipeline termin√© avec succ√®s.'
        }
        failure {
            echo '‚ùå √âchec du pipeline. V√©rifiez les logs.'
        }
        always {
            deleteDir()
        }
    }
}
